package main

import (
	"reflect"
	"testing"
)

func TestRow_diag(t *testing.T) {
	type fields struct {
		fX int
		fY int
		tX int
		tY int
	}
	tests := []struct {
		name   string
		fields fields
		want   []Point
	}{
		{
			name: "",
			fields: fields{
				fX: 0,
				fY: 0,
				tX: 5,
				tY: 5,
			},
			want: []Point{
				{x: 0, y: 0},
				{x: 1, y: 1},
				{x: 2, y: 2},
				{x: 3, y: 3},
				{x: 4, y: 4},
				{x: 5, y: 5},
			},
		},
		{
			name: "invert",
			fields: fields{
				fX: 5,
				fY: 5,
				tX: 0,
				tY: 0,
			},
			want: []Point{
				{x: 5, y: 5},
				{x: 4, y: 4},
				{x: 3, y: 3},
				{x: 2, y: 2},
				{x: 1, y: 1},
				{x: 0, y: 0},
			},
		},
		{
			name: "e1",
			fields: fields{
				fX: 1,
				fY: 1,
				tX: 3,
				tY: 3,
			},
			want: []Point{
				{x: 1, y: 1},
				{x: 2, y: 2},
				{x: 3, y: 3},
			},
		},
		{
			name: "e2",
			fields: fields{
				fX: 9,
				fY: 7,
				tX: 7,
				tY: 9,
			},
			want: []Point{
				{x: 9, y: 7},
				{x: 8, y: 8},
				{x: 7, y: 9},
			},
		},
		{
			name: "panic",
			fields: fields{
				fX: 814,
				fY: 750,
				tX: 86,
				tY: 22,
			},
			want: []Point{
				{x: 814, y: 750},
				{x: 813, y: 749},
				{x: 812, y: 748},
				{x: 811, y: 747},
				{x: 810, y: 746},
				{x: 809, y: 745},
				{x: 808, y: 744},
				{x: 807, y: 743},
				{x: 806, y: 742},
				{x: 805, y: 741},
				{x: 804, y: 740},
				{x: 803, y: 739},
				{x: 802, y: 738},
				{x: 801, y: 737},
				{x: 800, y: 736},
				{x: 799, y: 735},
				{x: 798, y: 734},
				{x: 797, y: 733},
				{x: 796, y: 732},
				{x: 795, y: 731},
				{x: 794, y: 730},
				{x: 793, y: 729},
				{x: 792, y: 728},
				{x: 791, y: 727},
				{x: 790, y: 726},
				{x: 789, y: 725},
				{x: 788, y: 724},
				{x: 787, y: 723},
				{x: 786, y: 722},
				{x: 785, y: 721},
				{x: 784, y: 720},
				{x: 783, y: 719},
				{x: 782, y: 718},
				{x: 781, y: 717},
				{x: 780, y: 716},
				{x: 779, y: 715},
				{x: 778, y: 714},
				{x: 777, y: 713},
				{x: 776, y: 712},
				{x: 775, y: 711},
				{x: 774, y: 710},
				{x: 773, y: 709},
				{x: 772, y: 708},
				{x: 771, y: 707},
				{x: 770, y: 706},
				{x: 769, y: 705},
				{x: 768, y: 704},
				{x: 767, y: 703},
				{x: 766, y: 702},
				{x: 765, y: 701},
				{x: 764, y: 700},
				{x: 763, y: 699},
				{x: 762, y: 698},
				{x: 761, y: 697},
				{x: 760, y: 696},
				{x: 759, y: 695},
				{x: 758, y: 694},
				{x: 757, y: 693},
				{x: 756, y: 692},
				{x: 755, y: 691},
				{x: 754, y: 690},
				{x: 753, y: 689},
				{x: 752, y: 688},
				{x: 751, y: 687},
				{x: 750, y: 686},
				{x: 749, y: 685},
				{x: 748, y: 684},
				{x: 747, y: 683},
				{x: 746, y: 682},
				{x: 745, y: 681},
				{x: 744, y: 680},
				{x: 743, y: 679},
				{x: 742, y: 678},
				{x: 741, y: 677},
				{x: 740, y: 676},
				{x: 739, y: 675},
				{x: 738, y: 674},
				{x: 737, y: 673},
				{x: 736, y: 672},
				{x: 735, y: 671},
				{x: 734, y: 670},
				{x: 733, y: 669},
				{x: 732, y: 668},
				{x: 731, y: 667},
				{x: 730, y: 666},
				{x: 729, y: 665},
				{x: 728, y: 664},
				{x: 727, y: 663},
				{x: 726, y: 662},
				{x: 725, y: 661},
				{x: 724, y: 660},
				{x: 723, y: 659},
				{x: 722, y: 658},
				{x: 721, y: 657},
				{x: 720, y: 656},
				{x: 719, y: 655},
				{x: 718, y: 654},
				{x: 717, y: 653},
				{x: 716, y: 652},
				{x: 715, y: 651},
				{x: 714, y: 650},
				{x: 713, y: 649},
				{x: 712, y: 648},
				{x: 711, y: 647},
				{x: 710, y: 646},
				{x: 709, y: 645},
				{x: 708, y: 644},
				{x: 707, y: 643},
				{x: 706, y: 642},
				{x: 705, y: 641},
				{x: 704, y: 640},
				{x: 703, y: 639},
				{x: 702, y: 638},
				{x: 701, y: 637},
				{x: 700, y: 636},
				{x: 699, y: 635},
				{x: 698, y: 634},
				{x: 697, y: 633},
				{x: 696, y: 632},
				{x: 695, y: 631},
				{x: 694, y: 630},
				{x: 693, y: 629},
				{x: 692, y: 628},
				{x: 691, y: 627},
				{x: 690, y: 626},
				{x: 689, y: 625},
				{x: 688, y: 624},
				{x: 687, y: 623},
				{x: 686, y: 622},
				{x: 685, y: 621},
				{x: 684, y: 620},
				{x: 683, y: 619},
				{x: 682, y: 618},
				{x: 681, y: 617},
				{x: 680, y: 616},
				{x: 679, y: 615},
				{x: 678, y: 614},
				{x: 677, y: 613},
				{x: 676, y: 612},
				{x: 675, y: 611},
				{x: 674, y: 610},
				{x: 673, y: 609},
				{x: 672, y: 608},
				{x: 671, y: 607},
				{x: 670, y: 606},
				{x: 669, y: 605},
				{x: 668, y: 604},
				{x: 667, y: 603},
				{x: 666, y: 602},
				{x: 665, y: 601},
				{x: 664, y: 600},
				{x: 663, y: 599},
				{x: 662, y: 598},
				{x: 661, y: 597},
				{x: 660, y: 596},
				{x: 659, y: 595},
				{x: 658, y: 594},
				{x: 657, y: 593},
				{x: 656, y: 592},
				{x: 655, y: 591},
				{x: 654, y: 590},
				{x: 653, y: 589},
				{x: 652, y: 588},
				{x: 651, y: 587},
				{x: 650, y: 586},
				{x: 649, y: 585},
				{x: 648, y: 584},
				{x: 647, y: 583},
				{x: 646, y: 582},
				{x: 645, y: 581},
				{x: 644, y: 580},
				{x: 643, y: 579},
				{x: 642, y: 578},
				{x: 641, y: 577},
				{x: 640, y: 576},
				{x: 639, y: 575},
				{x: 638, y: 574},
				{x: 637, y: 573},
				{x: 636, y: 572},
				{x: 635, y: 571},
				{x: 634, y: 570},
				{x: 633, y: 569},
				{x: 632, y: 568},
				{x: 631, y: 567},
				{x: 630, y: 566},
				{x: 629, y: 565},
				{x: 628, y: 564},
				{x: 627, y: 563},
				{x: 626, y: 562},
				{x: 625, y: 561},
				{x: 624, y: 560},
				{x: 623, y: 559},
				{x: 622, y: 558},
				{x: 621, y: 557},
				{x: 620, y: 556},
				{x: 619, y: 555},
				{x: 618, y: 554},
				{x: 617, y: 553},
				{x: 616, y: 552},
				{x: 615, y: 551},
				{x: 614, y: 550},
				{x: 613, y: 549},
				{x: 612, y: 548},
				{x: 611, y: 547},
				{x: 610, y: 546},
				{x: 609, y: 545},
				{x: 608, y: 544},
				{x: 607, y: 543},
				{x: 606, y: 542},
				{x: 605, y: 541},
				{x: 604, y: 540},
				{x: 603, y: 539},
				{x: 602, y: 538},
				{x: 601, y: 537},
				{x: 600, y: 536},
				{x: 599, y: 535},
				{x: 598, y: 534},
				{x: 597, y: 533},
				{x: 596, y: 532},
				{x: 595, y: 531},
				{x: 594, y: 530},
				{x: 593, y: 529},
				{x: 592, y: 528},
				{x: 591, y: 527},
				{x: 590, y: 526},
				{x: 589, y: 525},
				{x: 588, y: 524},
				{x: 587, y: 523},
				{x: 586, y: 522},
				{x: 585, y: 521},
				{x: 584, y: 520},
				{x: 583, y: 519},
				{x: 582, y: 518},
				{x: 581, y: 517},
				{x: 580, y: 516},
				{x: 579, y: 515},
				{x: 578, y: 514},
				{x: 577, y: 513},
				{x: 576, y: 512},
				{x: 575, y: 511},
				{x: 574, y: 510},
				{x: 573, y: 509},
				{x: 572, y: 508},
				{x: 571, y: 507},
				{x: 570, y: 506},
				{x: 569, y: 505},
				{x: 568, y: 504},
				{x: 567, y: 503},
				{x: 566, y: 502},
				{x: 565, y: 501},
				{x: 564, y: 500},
				{x: 563, y: 499},
				{x: 562, y: 498},
				{x: 561, y: 497},
				{x: 560, y: 496},
				{x: 559, y: 495},
				{x: 558, y: 494},
				{x: 557, y: 493},
				{x: 556, y: 492},
				{x: 555, y: 491},
				{x: 554, y: 490},
				{x: 553, y: 489},
				{x: 552, y: 488},
				{x: 551, y: 487},
				{x: 550, y: 486},
				{x: 549, y: 485},
				{x: 548, y: 484},
				{x: 547, y: 483},
				{x: 546, y: 482},
				{x: 545, y: 481},
				{x: 544, y: 480},
				{x: 543, y: 479},
				{x: 542, y: 478},
				{x: 541, y: 477},
				{x: 540, y: 476},
				{x: 539, y: 475},
				{x: 538, y: 474},
				{x: 537, y: 473},
				{x: 536, y: 472},
				{x: 535, y: 471},
				{x: 534, y: 470},
				{x: 533, y: 469},
				{x: 532, y: 468},
				{x: 531, y: 467},
				{x: 530, y: 466},
				{x: 529, y: 465},
				{x: 528, y: 464},
				{x: 527, y: 463},
				{x: 526, y: 462},
				{x: 525, y: 461},
				{x: 524, y: 460},
				{x: 523, y: 459},
				{x: 522, y: 458},
				{x: 521, y: 457},
				{x: 520, y: 456},
				{x: 519, y: 455},
				{x: 518, y: 454},
				{x: 517, y: 453},
				{x: 516, y: 452},
				{x: 515, y: 451},
				{x: 514, y: 450},
				{x: 513, y: 449},
				{x: 512, y: 448},
				{x: 511, y: 447},
				{x: 510, y: 446},
				{x: 509, y: 445},
				{x: 508, y: 444},
				{x: 507, y: 443},
				{x: 506, y: 442},
				{x: 505, y: 441},
				{x: 504, y: 440},
				{x: 503, y: 439},
				{x: 502, y: 438},
				{x: 501, y: 437},
				{x: 500, y: 436},
				{x: 499, y: 435},
				{x: 498, y: 434},
				{x: 497, y: 433},
				{x: 496, y: 432},
				{x: 495, y: 431},
				{x: 494, y: 430},
				{x: 493, y: 429},
				{x: 492, y: 428},
				{x: 491, y: 427},
				{x: 490, y: 426},
				{x: 489, y: 425},
				{x: 488, y: 424},
				{x: 487, y: 423},
				{x: 486, y: 422},
				{x: 485, y: 421},
				{x: 484, y: 420},
				{x: 483, y: 419},
				{x: 482, y: 418},
				{x: 481, y: 417},
				{x: 480, y: 416},
				{x: 479, y: 415},
				{x: 478, y: 414},
				{x: 477, y: 413},
				{x: 476, y: 412},
				{x: 475, y: 411},
				{x: 474, y: 410},
				{x: 473, y: 409},
				{x: 472, y: 408},
				{x: 471, y: 407},
				{x: 470, y: 406},
				{x: 469, y: 405},
				{x: 468, y: 404},
				{x: 467, y: 403},
				{x: 466, y: 402},
				{x: 465, y: 401},
				{x: 464, y: 400},
				{x: 463, y: 399},
				{x: 462, y: 398},
				{x: 461, y: 397},
				{x: 460, y: 396},
				{x: 459, y: 395},
				{x: 458, y: 394},
				{x: 457, y: 393},
				{x: 456, y: 392},
				{x: 455, y: 391},
				{x: 454, y: 390},
				{x: 453, y: 389},
				{x: 452, y: 388},
				{x: 451, y: 387},
				{x: 450, y: 386},
				{x: 449, y: 385},
				{x: 448, y: 384},
				{x: 447, y: 383},
				{x: 446, y: 382},
				{x: 445, y: 381},
				{x: 444, y: 380},
				{x: 443, y: 379},
				{x: 442, y: 378},
				{x: 441, y: 377},
				{x: 440, y: 376},
				{x: 439, y: 375},
				{x: 438, y: 374},
				{x: 437, y: 373},
				{x: 436, y: 372},
				{x: 435, y: 371},
				{x: 434, y: 370},
				{x: 433, y: 369},
				{x: 432, y: 368},
				{x: 431, y: 367},
				{x: 430, y: 366},
				{x: 429, y: 365},
				{x: 428, y: 364},
				{x: 427, y: 363},
				{x: 426, y: 362},
				{x: 425, y: 361},
				{x: 424, y: 360},
				{x: 423, y: 359},
				{x: 422, y: 358},
				{x: 421, y: 357},
				{x: 420, y: 356},
				{x: 419, y: 355},
				{x: 418, y: 354},
				{x: 417, y: 353},
				{x: 416, y: 352},
				{x: 415, y: 351},
				{x: 414, y: 350},
				{x: 413, y: 349},
				{x: 412, y: 348},
				{x: 411, y: 347},
				{x: 410, y: 346},
				{x: 409, y: 345},
				{x: 408, y: 344},
				{x: 407, y: 343},
				{x: 406, y: 342},
				{x: 405, y: 341},
				{x: 404, y: 340},
				{x: 403, y: 339},
				{x: 402, y: 338},
				{x: 401, y: 337},
				{x: 400, y: 336},
				{x: 399, y: 335},
				{x: 398, y: 334},
				{x: 397, y: 333},
				{x: 396, y: 332},
				{x: 395, y: 331},
				{x: 394, y: 330},
				{x: 393, y: 329},
				{x: 392, y: 328},
				{x: 391, y: 327},
				{x: 390, y: 326},
				{x: 389, y: 325},
				{x: 388, y: 324},
				{x: 387, y: 323},
				{x: 386, y: 322},
				{x: 385, y: 321},
				{x: 384, y: 320},
				{x: 383, y: 319},
				{x: 382, y: 318},
				{x: 381, y: 317},
				{x: 380, y: 316},
				{x: 379, y: 315},
				{x: 378, y: 314},
				{x: 377, y: 313},
				{x: 376, y: 312},
				{x: 375, y: 311},
				{x: 374, y: 310},
				{x: 373, y: 309},
				{x: 372, y: 308},
				{x: 371, y: 307},
				{x: 370, y: 306},
				{x: 369, y: 305},
				{x: 368, y: 304},
				{x: 367, y: 303},
				{x: 366, y: 302},
				{x: 365, y: 301},
				{x: 364, y: 300},
				{x: 363, y: 299},
				{x: 362, y: 298},
				{x: 361, y: 297},
				{x: 360, y: 296},
				{x: 359, y: 295},
				{x: 358, y: 294},
				{x: 357, y: 293},
				{x: 356, y: 292},
				{x: 355, y: 291},
				{x: 354, y: 290},
				{x: 353, y: 289},
				{x: 352, y: 288},
				{x: 351, y: 287},
				{x: 350, y: 286},
				{x: 349, y: 285},
				{x: 348, y: 284},
				{x: 347, y: 283},
				{x: 346, y: 282},
				{x: 345, y: 281},
				{x: 344, y: 280},
				{x: 343, y: 279},
				{x: 342, y: 278},
				{x: 341, y: 277},
				{x: 340, y: 276},
				{x: 339, y: 275},
				{x: 338, y: 274},
				{x: 337, y: 273},
				{x: 336, y: 272},
				{x: 335, y: 271},
				{x: 334, y: 270},
				{x: 333, y: 269},
				{x: 332, y: 268},
				{x: 331, y: 267},
				{x: 330, y: 266},
				{x: 329, y: 265},
				{x: 328, y: 264},
				{x: 327, y: 263},
				{x: 326, y: 262},
				{x: 325, y: 261},
				{x: 324, y: 260},
				{x: 323, y: 259},
				{x: 322, y: 258},
				{x: 321, y: 257},
				{x: 320, y: 256},
				{x: 319, y: 255},
				{x: 318, y: 254},
				{x: 317, y: 253},
				{x: 316, y: 252},
				{x: 315, y: 251},
				{x: 314, y: 250},
				{x: 313, y: 249},
				{x: 312, y: 248},
				{x: 311, y: 247},
				{x: 310, y: 246},
				{x: 309, y: 245},
				{x: 308, y: 244},
				{x: 307, y: 243},
				{x: 306, y: 242},
				{x: 305, y: 241},
				{x: 304, y: 240},
				{x: 303, y: 239},
				{x: 302, y: 238},
				{x: 301, y: 237},
				{x: 300, y: 236},
				{x: 299, y: 235},
				{x: 298, y: 234},
				{x: 297, y: 233},
				{x: 296, y: 232},
				{x: 295, y: 231},
				{x: 294, y: 230},
				{x: 293, y: 229},
				{x: 292, y: 228},
				{x: 291, y: 227},
				{x: 290, y: 226},
				{x: 289, y: 225},
				{x: 288, y: 224},
				{x: 287, y: 223},
				{x: 286, y: 222},
				{x: 285, y: 221},
				{x: 284, y: 220},
				{x: 283, y: 219},
				{x: 282, y: 218},
				{x: 281, y: 217},
				{x: 280, y: 216},
				{x: 279, y: 215},
				{x: 278, y: 214},
				{x: 277, y: 213},
				{x: 276, y: 212},
				{x: 275, y: 211},
				{x: 274, y: 210},
				{x: 273, y: 209},
				{x: 272, y: 208},
				{x: 271, y: 207},
				{x: 270, y: 206},
				{x: 269, y: 205},
				{x: 268, y: 204},
				{x: 267, y: 203},
				{x: 266, y: 202},
				{x: 265, y: 201},
				{x: 264, y: 200},
				{x: 263, y: 199},
				{x: 262, y: 198},
				{x: 261, y: 197},
				{x: 260, y: 196},
				{x: 259, y: 195},
				{x: 258, y: 194},
				{x: 257, y: 193},
				{x: 256, y: 192},
				{x: 255, y: 191},
				{x: 254, y: 190},
				{x: 253, y: 189},
				{x: 252, y: 188},
				{x: 251, y: 187},
				{x: 250, y: 186},
				{x: 249, y: 185},
				{x: 248, y: 184},
				{x: 247, y: 183},
				{x: 246, y: 182},
				{x: 245, y: 181},
				{x: 244, y: 180},
				{x: 243, y: 179},
				{x: 242, y: 178},
				{x: 241, y: 177},
				{x: 240, y: 176},
				{x: 239, y: 175},
				{x: 238, y: 174},
				{x: 237, y: 173},
				{x: 236, y: 172},
				{x: 235, y: 171},
				{x: 234, y: 170},
				{x: 233, y: 169},
				{x: 232, y: 168},
				{x: 231, y: 167},
				{x: 230, y: 166},
				{x: 229, y: 165},
				{x: 228, y: 164},
				{x: 227, y: 163},
				{x: 226, y: 162},
				{x: 225, y: 161},
				{x: 224, y: 160},
				{x: 223, y: 159},
				{x: 222, y: 158},
				{x: 221, y: 157},
				{x: 220, y: 156},
				{x: 219, y: 155},
				{x: 218, y: 154},
				{x: 217, y: 153},
				{x: 216, y: 152},
				{x: 215, y: 151},
				{x: 214, y: 150},
				{x: 213, y: 149},
				{x: 212, y: 148},
				{x: 211, y: 147},
				{x: 210, y: 146},
				{x: 209, y: 145},
				{x: 208, y: 144},
				{x: 207, y: 143},
				{x: 206, y: 142},
				{x: 205, y: 141},
				{x: 204, y: 140},
				{x: 203, y: 139},
				{x: 202, y: 138},
				{x: 201, y: 137},
				{x: 200, y: 136},
				{x: 199, y: 135},
				{x: 198, y: 134},
				{x: 197, y: 133},
				{x: 196, y: 132},
				{x: 195, y: 131},
				{x: 194, y: 130},
				{x: 193, y: 129},
				{x: 192, y: 128},
				{x: 191, y: 127},
				{x: 190, y: 126},
				{x: 189, y: 125},
				{x: 188, y: 124},
				{x: 187, y: 123},
				{x: 186, y: 122},
				{x: 185, y: 121},
				{x: 184, y: 120},
				{x: 183, y: 119},
				{x: 182, y: 118},
				{x: 181, y: 117},
				{x: 180, y: 116},
				{x: 179, y: 115},
				{x: 178, y: 114},
				{x: 177, y: 113},
				{x: 176, y: 112},
				{x: 175, y: 111},
				{x: 174, y: 110},
				{x: 173, y: 109},
				{x: 172, y: 108},
				{x: 171, y: 107},
				{x: 170, y: 106},
				{x: 169, y: 105},
				{x: 168, y: 104},
				{x: 167, y: 103},
				{x: 166, y: 102},
				{x: 165, y: 101},
				{x: 164, y: 100},
				{x: 163, y: 99},
				{x: 162, y: 98},
				{x: 161, y: 97},
				{x: 160, y: 96},
				{x: 159, y: 95},
				{x: 158, y: 94},
				{x: 157, y: 93},
				{x: 156, y: 92},
				{x: 155, y: 91},
				{x: 154, y: 90},
				{x: 153, y: 89},
				{x: 152, y: 88},
				{x: 151, y: 87},
				{x: 150, y: 86},
				{x: 149, y: 85},
				{x: 148, y: 84},
				{x: 147, y: 83},
				{x: 146, y: 82},
				{x: 145, y: 81},
				{x: 144, y: 80},
				{x: 143, y: 79},
				{x: 142, y: 78},
				{x: 141, y: 77},
				{x: 140, y: 76},
				{x: 139, y: 75},
				{x: 138, y: 74},
				{x: 137, y: 73},
				{x: 136, y: 72},
				{x: 135, y: 71},
				{x: 134, y: 70},
				{x: 133, y: 69},
				{x: 132, y: 68},
				{x: 131, y: 67},
				{x: 130, y: 66},
				{x: 129, y: 65},
				{x: 128, y: 64},
				{x: 127, y: 63},
				{x: 126, y: 62},
				{x: 125, y: 61},
				{x: 124, y: 60},
				{x: 123, y: 59},
				{x: 122, y: 58},
				{x: 121, y: 57},
				{x: 120, y: 56},
				{x: 119, y: 55},
				{x: 118, y: 54},
				{x: 117, y: 53},
				{x: 116, y: 52},
				{x: 115, y: 51},
				{x: 114, y: 50},
				{x: 113, y: 49},
				{x: 112, y: 48},
				{x: 111, y: 47},
				{x: 110, y: 46},
				{x: 109, y: 45},
				{x: 108, y: 44},
				{x: 107, y: 43},
				{x: 106, y: 42},
				{x: 105, y: 41},
				{x: 104, y: 40},
				{x: 103, y: 39},
				{x: 102, y: 38},
				{x: 101, y: 37},
				{x: 100, y: 36},
				{x: 99, y: 35},
				{x: 98, y: 34},
				{x: 97, y: 33},
				{x: 96, y: 32},
				{x: 95, y: 31},
				{x: 94, y: 30},
				{x: 93, y: 29},
				{x: 92, y: 28},
				{x: 91, y: 27},
				{x: 90, y: 26},
				{x: 89, y: 25},
				{x: 88, y: 24},
				{x: 87, y: 23},
				{x: 86, y: 22},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			r := &MarkerPlan{
				fX: tt.fields.fX,
				fY: tt.fields.fY,
				tX: tt.fields.tX,
				tY: tt.fields.tY,
			}
			if got := r.getDiagonalPoints(); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("getDiagonalPoints() = %v\n, want %v", got, tt.want)
			}
		})
	}
}
